Description: "CD12352 - Infrastructure as Code Project - Udagram"

Parameters:
  ProjectName:
    Type: String
    Description: Infrastructure name

Resources:
  ServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Server security group. Allows http inbound on port 80 only.
      GroupName: !Sub ${ProjectName}-security-group
      SecurityGroupEgress:
        - Description: server inbound rule
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
          SourceSecurityGroupId: !Ref ServerLBSecurityGroup
      SecurityGroupIngress:
        - Description: server outbound rule
          FromPort: 0
          IpProtocol: tcp
          ToPort: 65535
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-sg
      VpcId:
        Fn::ImportValue: !Sub ${ProjectName}-vpcid

  ServerLBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Server security group. Allows http inbound on port 80 only.
      GroupName: !Sub ${ProjectName}-load-balancer-sg
      SecurityGroupEgress:
        - Description: load balancer inbound rule
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
        - Description: load balancer outbound rule
          FromPort: 0
          IpProtocol: tcp
          ToPort: 65535
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-lb-security-group
      VpcId:
        Fn::ImportValue: !Sub ${ProjectName}-vpcid

  WebAppLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Sub ${ProjectName}-server-template
      LaunchTemplateData:
        UserData:
          Fn::Base64: |
            #!/bin/bash
            apt-get update -y
            sudo apt-get install nginx -y
            service nginx start
        BlockDeviceMappings:
          - DeviceName: "/dev/sdk"
            Ebs:
              VolumeSize: "10"
        IamInstanceProfile:
          Name: !Ref RootInstanceProfile
        ImageId: ami-08662cc7aed840314
        InstanceType: t2.micro
        SecurityGroupIds:
          - !Ref ServerSecurityGroup

  UdagramAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub ${ProjectName}-auto-scaling-group
      DesiredCapacity: 2
      HealthCheckGracePeriod: 60
      HealthCheckType: ELB
      LaunchTemplate:
        LaunchTemplateId: !Ref WebAppLaunchTemplate
        Version: !GetAtt WebAppLaunchTemplate.LatestVersionNumber
      MaxSize: 6
      MinSize: 2
      TargetGroupARNs:
        - !Ref ALBTargetGroup
      VPCZoneIdentifier:
        - Fn::ImportValue: !Sub ${ProjectName}-prt1-sbn
        - Fn::ImportValue: !Sub ${ProjectName}-prt2-sbn

  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 60
      HealthCheckPath: /
      HealthCheckPort: 80
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 15
      HealthyThresholdCount: 4
      Name: !Sub ${ProjectName}-target-group
      Port: 80
      Protocol: HTTP
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-target-group
      UnhealthyThresholdCount: 5
      VpcId:
        Fn::ImportValue: !Sub ${ProjectName}-vpcid

  UdagramLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub ${ProjectName}-load-balancer
      SecurityGroups:
        - !Ref ServerLBSecurityGroup
      Subnets:
        - Fn::ImportValue: !Sub ${ProjectName}-prt1-sbn
        - Fn::ImportValue: !Sub ${ProjectName}-prt2-sbn
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-load-balancer
      Type: application

  LoadBalancerListner:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Order: 1
          TargetGroupArn: !Ref ALBTargetGroup
          Type: forward
      LoadBalancerArn: !Ref UdagramLoadBalancer
      Port: 80
      Protocol: HTTP

  LoadBalancerListnerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - TargetGroupArn: !Ref ALBTargetGroup
          Type: forward
      Conditions:
        - Field: http-header
          HttpHeaderConfig:
            HttpHeaderName: User-Agent
            Values:
              - Mozilla
              - Chrome
        - Field: path-pattern
          Values: [/]
      ListenerArn: !Ref LoadBalancerListner
      Priority: 1

  UdagramBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: udagram-storage
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Status: "Enabled"
            NoncurrentVersionExpirationInDays: 10
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-bucket

  UdagramServerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Path: /
      Policies:
        - PolicyName: s3Poclicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:PutObject"
                Resource:
                  Fn::Join:
                    - ""
                    - - "arn:aws:s3:::"
                      - Ref: "UdagramBucket"
                      - "/*"

  UdagramInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref UdagramServerRole

Outputs:
  URL:
    Description: udagram public URL
    Value: !Sub "http://${UdagramLoadBalancer.DNSName}"
    Export:
      Name: !Sub ${ProjectName}-lb-url
